name: Test
on:
  push:
    branches: ['**', '!main']
  pull_request:
  workflow_dispatch:
env:
  DEBIAN_FRONTEND: noninteractive
jobs:
  test:
    name: Test the doctoral thesis and the thesis defense presentation
    runs-on: ubuntu-latest
    container:
      image: texlive/texlive:TL2020-historic
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Check that there are no repeating footnote and link labels in the thesis
        shell: bash {0}
        run: |
          set -e -o pipefail
          sed -n '/^ *\[/s/:.*//p' main.md | sort | uniq -dD | { ! grep .; }

      - name: Check that there are no repeating footnote and link labels in the thesis defense
        shell: bash {0}
        run: |
          set -e -o pipefail
          sed -n '/^ *\[/s/:.*//p' defense.md | sort | uniq -dD | { ! grep .; }

      - name: Install GraphViz and pdf2txt
        run: |
          set -e
          apt-get -qy update
          apt-get -qy install --no-install-recommends graphviz python3-pdfminer

      - name: Typeset the doctoral thesis
        run: |
          latexmk thesis

      - name: Typeset the thesis defense presentation slides
        run: |
          latexmk presentation

      - name: Typeset the thesis defense presentation notes
        run: |
          latexmk -Werror notes

      - name: Estimate the length of the thesis defense presentation notes
        run: |
          set -e
          printf 'Summary length: %d minutes\n'  $(($(pdf2txt notes.pdf | sed -n '/^Summary$/,/^Rebuttal$/p' | wc -w) / 135))
          printf 'Rebuttal length: %d minutes\n' $(($(pdf2txt notes.pdf | sed -n '/^Rebuttal$/,/^References$/p' | wc -w) / 135))

      - name: Upload the artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: |
            thesis.pdf
            presentation.pdf
            notes.pdf
